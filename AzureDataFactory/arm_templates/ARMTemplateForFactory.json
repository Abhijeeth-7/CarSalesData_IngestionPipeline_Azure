{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "cars-adf-ajaz"
        },
        "ADF_to_AzureSqlDatabase_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'ADF_to_AzureSqlDatabase'"
        },
        "ls_adf_datalakeGen2_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'ls_adf_datalakeGen2'"
        },
        "ADF_to_AzureSqlDatabase_properties_typeProperties_server": {
            "type": "string",
            "defaultValue": "carsales-server-ajazdemo.database.windows.net"
        },
        "ADF_to_AzureSqlDatabase_properties_typeProperties_database": {
            "type": "string",
            "defaultValue": "carsales"
        },
        "ADF_to_AzureSqlDatabase_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "admin-aj"
        },
        "Src_GithubAPI_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/"
        },
        "ls_adf_datalakeGen2_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://carsalesdatalake04ajaz.dfs.core.windows.net/"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/ADF_to_AzureSqlDatabase')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "server": "[parameters('ADF_to_AzureSqlDatabase_properties_typeProperties_server')]",
                    "database": "[parameters('ADF_to_AzureSqlDatabase_properties_typeProperties_database')]",
                    "encrypt": "mandatory",
                    "trustServerCertificate": false,
                    "authenticationType": "SQL",
                    "userName": "[parameters('ADF_to_AzureSqlDatabase_properties_typeProperties_userName')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('ADF_to_AzureSqlDatabase_password')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Src_GithubAPI')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "HttpServer",
                "typeProperties": {
                    "url": "[parameters('Src_GithubAPI_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_adf_datalakeGen2')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ls_adf_datalakeGen2_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('ls_adf_datalakeGen2_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlTable')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ADF_to_AzureSqlDatabase",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": "dbo",
                    "table": {
                        "value": "@{dataset().tableName}",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ADF_to_AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_src')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Src_GithubAPI",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "dataSetName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "HttpServerLocation",
                        "relativeUrl": {
                            "value": "anshlambagit/Azure-DE-Project-Resources/refs/heads/main/Raw%20Data/@{dataset().dataSetName}",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Src_GithubAPI')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_bronze')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adf_datalakeGen2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "raw_data",
                        "fileSystem": "bronze"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adf_datalakeGen2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DataExtractionPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ExtractData",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "additionalColumns": [
                                    {
                                        "name": "saleId",
                                        "value": {
                                            "value": "@guid()",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "storeSettings": {
                                    "type": "HttpReadSettings",
                                    "requestMethod": "GET"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": true,
                                    "keys": [
                                        "BranchId"
                                    ]
                                },
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "dataIntegrationUnits": 4,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Branch_ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BranchId",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Dealer_ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "DealerId",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Model_ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ModelId",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Revenue",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Revenue",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Units_Sold",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "UnitsSold",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Date_ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "DateId",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Day",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Day",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Month",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Month",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Year",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Year",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BranchName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BranchName",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DealerName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "DealerName",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Product_Name",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ProductName",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "saleId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "SaleId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_src",
                                "type": "DatasetReference",
                                "parameters": {
                                    "dataSetName": "SalesData.csv"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "AzureSqlTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableName": "src_car_sales"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2025-01-13T18:39:23Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_src')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlTable')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/IncrementalDataLoadPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Last_load_value",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select last_load as min_value from pipeline_watermark",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableName": "pipeline_watermark"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Current_load_value",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select max(DateId) as max_value from src_car_sales",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableName": "src_car_sales"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Copy Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Last_load_value",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Current_load_value",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select * from src_car_sales\nwhere DateId > '@{activity('Last_load_value').output.value[0].min_value}' and DateId <= '@{activity('Current_load_value').output.value[0].max_value}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSqlTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableName": "src_car_sales"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_bronze",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "update_last_load",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[updatePipelineWaterMark]",
                            "storedProcedureParameters": {
                                "last_load": {
                                    "value": {
                                        "value": "@{activity('Current_load_value').output.value[0].max_value}",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ADF_to_AzureSqlDatabase",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2025-01-13T18:39:23Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlTable')]",
                "[concat(variables('factoryId'), '/datasets/ds_bronze')]",
                "[concat(variables('factoryId'), '/linkedServices/ADF_to_AzureSqlDatabase')]"
            ]
        }
    ]
}